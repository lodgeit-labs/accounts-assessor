
 shellx2(Cmd) :-
	shellx2(Cmd, _).

 shellx2(Cmd_In, Exit_Status) :-
	shellx3(Cmd_In, [exit_status(Exit_Status)]).

 shellx3(Cmd_In, Options) :-
	flatten([Cmd_In], Cmd_Flat),
	atomic_list_concat(Cmd_Flat, " ", Cmd),

	(	memberchk(print_command(true), Options)
	->	format(user_error, '~w\n\n', [Cmd])
	;	true),

	shell(Cmd, Exit_Status),

	(	memberchk(exit_status(E), Options)
	->	E = Exit_Status
	;	true),

	/* this option allows to pass the exact command string used back to the calling predicate */
	(	memberchk(command(C), Options)
	->	C = Cmd
	;	true).



/* for gnome-terminal and ..? */
 print_clickable_link(Url, Title) :-
	/* todo replace this with write */
	atomics_to_string([">&2 printf '\e]8;;", Url,"\e\\   ", Title, "   \e]8;;\e\\\n'"],  S),
	shellx2(S,_).







 fetch_remote_file(Url, Result) :-

	/* todo: if there's ever a need to fetch a set of files, like a xbrl taxonomy, it might make sense to come up with a dedicated directory name under remote_files, so that file names don't change..? */

	my_request_tmp_dir(loc(tmp_directory_name,Tmp_Dir)),
    resolve_specifier(loc(specifier, my_tmp(Tmp_Dir)), loc(absolute_path, Tmp_Dir_Path)),

	setup_call_cleanup(
		fetch_remote_file2(Tmp_Dir_Path, Url, Input_Stream),
		!json_read_dict(Input_Stream, Response_JSON),
		/* can it be unbound here? */
		(var(Input_Stream) -> true ; close(Input_Stream))
    ),
	%format("Result: ~w~n", [Response_JSON.result]),
	(	Response_JSON.result = "ok"
	->	Result = Response_JSON.file_path
	;	throw_string(['fetch_remote_file error: ', Response_JSON.error_message])).

 fetch_remote_file2(Tmp_Dir_Path_Encoded, Url_Encoded, Input_Stream) :-
 	!http_open(
		$>append($>!url_parts($>!download_bastion_server),
		[
			path('/get_into_dir'),
			search([
				dir=Remote_Files_Dir,
				url=Url_Encoded
			])
		]),
		Input_Stream,
		[
			request_header('Accept'='application/json'),
			method(post)
		]
	).


