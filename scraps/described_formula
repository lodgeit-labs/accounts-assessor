




/*_variable_names([], []).
my_variable_names([V|Vars], [N|Namings]) :-
	var_property(V, name(Name)),
	N = (Name = V),
	my_variable_names(Vars, Namings).

goal_expansion(described_formula(X, variable_names(Namings)), X) :-
	term_variables(X, Vars),
	my_variable_names(Vars, Namings).



bind_term_string(X, S, Namings) :-
	term_string(X, S, [variable_names(Namings)]).



goal_expansion(aaa(X, S), Out) :-
	term_variables(X, Vars),
	my_variable_names(Vars, Namings),
	Out = (
		bind_term_string(X, S, Namings)
		,X
	).

goal_expansion(aa(X, S), Out) :-
	term_variables(X, Vars),
	my_variable_names(Vars, Namings),
	Out = (
		bind_term_string(X, S, Namings)
	).


	

z([S2,' ', S3,' ', S4]) :-
	aaa(AC = (
		X = U/3, 
		U=4444*Z
	), S2),
	Z = 27,
	aa(AC,S3),
	%aaa(C is Formula, S4),
	true.
%:- z(S),writeln(S).



y([S2,' ', S3,' ', S4]) :-
	%aaa((XXXXXX = UUUUUUU/3*ZZZZ), S),
	aaa((
		X = U/3, 
		U=4444*Z
	), S2),
	Z = 27,
	aaa(C is X, S3),
	aaa(C is C, S4)
	.
%:- y(S),writeln(S).


*/







/*
	/*
	
	
	
%:- use_module(library(clpfd)).
%:- use_module(library(clpq)).

	
	
	
	[ {}(formula : (_ + _ + _ * A) // (_ + _ + A) ',' computation : (1234 + 1800 + 54 * 42) // (27 + 3 + 42))

	note that gtrace does just fine:
	(Opening_Value + Purchases_Value + Natural_Increase_Cost_Per_Head * Natural_Increase_Count) // (Opening_Count + Purchases_Count + Natural_Increase_Count)

	passing variable_names to term_string messess with subsequent unification with the named variables.
	*/

	/*
	{Natural_Increase_Value = Natural_Increase_Cost_Per_Head * Natural_Increase_Count},
	{Opening_And_Purchases_And_Increase_Value_Exp = Opening_Value + Purchases_Value + Natural_Increase_Value},
	{Opening_And_Purchases_And_Increase_Count_Exp = Opening_Count + Purchases_Count + Natural_Increase_Count},
	{Average_Cost_Exp = Opening_And_Purchases_And_Increase_Value_Exp /  Opening_And_Purchases_And_Increase_Count_Exp},*/
	/*
	Type error: `_+[]+[{_= -_8096{geler = ...}+_8088-_8082,_8256= -_8224{geler = ...}+_8270-_8264,_8096{geler = ...}-_8224{geler = ...}*_8186{geler = ...}=0,- (1/_8270*_8088)+_=0},{- (1/_8270*_8088)+_=0},{_8096{geler = ...}-_8224{geler = ...}*_8186{geler = ...}=0},{_8096{geler = ...}-_8224{geler = ...}*_8186{geler = ...}=0},{_8096{geler = ...}-_8224{geler = ...}*_8186{geler = ...}=0},{- (1/_8270*_8088)+_=0}]' contains attributed variables
	*/
	
	
	/*Natural_Increase_Value #= Natural_Increase_Cost_Per_Head * Natural_Increase_Count,
	Opening_And_Purchases_And_Increase_Value_Exp #= Opening_Value + Purchases_Value + Natural_Increase_Value,
	Opening_And_Purchases_And_Increase_Count_Exp #= Opening_Count + Purchases_Count + Natural_Increase_Count,
	Average_Cost_Exp #= Opening_And_Purchases_And_Increase_Value_Exp //  Opening_And_Purchases_And_Increase_Count_Exp,*/
	/*
	[ {}(formula : A, % with constraints
    clpfd : (B // D #= A),
    clpfd : (B #= C + _ + _),
    clpfd : (_ * E #= C),
    clpfd : (D #= E + _ + _),
    clpfd : (D in inf .. -1 \/ 1 .. sup) ',' computation : 73)*/
    

*/
