
# Generated by CodiumAI

import pytest

class TestIncomeYear:

    #  Returns the correct year for a date before July.
    def test_before_july(self):
        date = datetime.datetime(2022, 6, 30)
        info = {'income': 1000}
        record = Record(date, info)
        assert record.income_year == 2022

    #  Returns the correct year + 1 for a date after June.
    def test_after_june(self):
        date = datetime.datetime(2022, 7, 1)
        info = {'income': 1000}
        record = Record(date, info)
        assert record.income_year == 2023

    #  Returns the correct year for a date in July.
    def test_in_july(self):
        date = datetime.datetime(2022, 7, 15)
        info = {'income': 1000}
        record = Record(date, info)
        assert record.income_year == 2022

    #  Returns the correct year + 1 for a date in June.
    def test_in_june(self):
        date = datetime.datetime(2022, 6, 15)
        info = {'income': 1000}
        record = Record(date, info)
        assert record.income_year == 2023

    #  Works correctly for leap years.
    def test_leap_year(self):
        date = datetime.datetime(2020, 2, 29)
        info = {'income': 1000}
        record = Record(date, info)
        assert record.income_year == 2020

    #  Works correctly for dates with timezones.
    def test_with_timezone(self):
        date = datetime.datetime(2022, 6, 30, tzinfo=pytz.timezone('America/New_York'))
        info = {'income': 1000}
        record = Record(date, info)
        assert record.income_year == 2023
