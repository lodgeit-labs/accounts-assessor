<?xml version="1.0"?>


 <!-- reports:  {
  "alerts": [],
  "reports": [
    {
      "id":"gl_html",
      "key":"GL viewer",
      "val": {
	"url":"http://koom-KVM:8080/tmp/1575373234.0167632.33/general_ledger_viewer/gl.html"
      }
    },
    {
      "id":"balance_sheet_html",
      "key":"balance sheet from 2015-07-01 to 2018-06-30 (AUD)",
      "val": {
	"url":"http://koom-KVM:8080/tmp/1575373234.0167632.33/balance_sheet.html"
      }
    },
    {
      "id":"profit_and_loss_html",
      "key":"profit&loss from 2015-07-01 to 2018-06-30 (AUD)",
      "val": {
	"url":"http://koom-KVM:8080/tmp/1575373234.0167632.33/profit_and_loss.html"
      }
    },
    {
      "id":"profit_and_loss_historical_html",
      "key":"profit&loss from 1-01-01 to 2015-06-30 (AUD)",
      "val": {
	"url":"http://koom-KVM:8080/tmp/1575373234.0167632.33/profit_and_loss_historical.html"
      }
    },
    {
      "id":"general_ledger_json",
      "key":"General Ledger Report",
      "val": {
	"url":"http://koom-KVM:8080/tmp/1575373234.0167632.33/general_ledger.json"
      }
    },
    {
      "id":"investment_report_html",
      "key":"investment report from 2015-07-01 to 2018-06-30 (AUD)",
      "val": {
	"url":"http://koom-KVM:8080/tmp/1575373234.0167632.33/investment_report.html"
      }
    },
    {
      "id":"investment_report_json",
      "key":"investment_report.json",
      "val": {
	"url":"http://koom-KVM:8080/tmp/1575373234.0167632.33/investment_report.json"
      }
    },
    {
      "id":"investment_report_since_beginning_html",
      "key":"investment report from 1-01-01 to 2018-06-30 (AUD)",
      "val": {
	"url":"http://koom-KVM:8080/tmp/1575373234.0167632.33/investment_report_since_beginning.html"
      }
    },
    {
      "id":"investment_report_since_beginning_json",
      "key":"investment_report_since_beginning.json",
      "val": {
	"url":"http://koom-KVM:8080/tmp/1575373234.0167632.33/investment_report_since_beginning.json"
      }
    },
    {
      "id":"crosschecks_html",
      "key":"crosschecks",
      "val": {
	"url":"http://koom-KVM:8080/tmp/1575373234.0167632.33/crosschecks.html"
      }
    },
    {
      "id":"response_xml",
      "key":"xbrl instance",
      "val": {
	"url":"http://koom-KVM:8080/tmp/1575373234.0167632.33/response.xml"
      }
    },
    {
      "id":"request_xml",
      "key":"request_xml",
      "val": {
	"url":"http://koom-KVM:8080/tmp/1575373234.0167632.33/request.xml"
      }
    },
    {
      "id":"all",
      "key":"all files",
      "val": {"url":"http://koom-KVM:8080/tmp/1575373234.0167632.33/"}
    }
  ]
} --> <!-- 
[] -->

<!--Exchange rates extracted:
[]

Accounts extracted:
[ account('AccountingFees','Expenses','Accounts'/'AccountingFees',0),
  account('Accounts',accountHierarchy,'Accounts'/'Accounts',0),
  account('Assets','NetAssets','Accounts'/'Assets',0),
  account('AssetsLivestock','CurrentAssets','Accounts'/'AssetsLivestock',0),
  account('AssetsLivestockAtAverageCost',
	  'AssetsLivestock',
	  'Accounts' / 'AssetsLivestockAtAverageCost',
	  0),
  account('AssetsLivestockAtCost',
	  'AssetsLivestock',
	  'Accounts' / 'AssetsLivestockAtCost',
	  0),
  account('BankCharges','Expenses','Accounts'/'BankCharges',0),
  account('Banks','CashAndCashEquivalents','Accounts'/'Banks',0),
  account('CapitalIntroduced','Equity','Accounts'/'CapitalIntroduced',0),
  account('CashAndCashEquivalents',
	  'CurrentAssets',
	  'Accounts' / 'CashAndCashEquivalents',
	  0),
  account('ClearingAccount','Revenue','Accounts'/'ClearingAccount',0),
  account('CostOfGoodsLivestock',
	  'Expenses',
	  'Accounts' / 'CostOfGoodsLivestock',
	  0),
  account('CurrencyMovement','Revenue','Accounts'/'CurrencyMovement',0),
  account('CurrentAssets','Assets','Accounts'/'CurrentAssets',0),
  account('CurrentEarnings','RetainedEarnings','Accounts'/'CurrentEarnings',0),
  account('CurrentLiabilities','Liabilities','Accounts'/'CurrentLiabilities',0),
  account('CurrentLoans','CurrentLiabilities','Accounts'/'CurrentLoans',0),
  account('Drawings','Equity','Accounts'/'Drawings',0),
  account('EarningsFinancialInvestments',
	  'OtherIncome',
	  'Accounts' / 'EarningsFinancialInvestments',
	  0),
  account('Equity','Accounts','Accounts'/'Equity',0),
  account('ExchangeGain','OtherIncome','Accounts'/'ExchangeGain',0),
  account('Expenses','NetIncomeLoss','Accounts'/'Expenses',0),
  account('FinancialInvestments',
	  'NoncurrentAssets',
	  'Accounts' / 'FinancialInvestments',
	  0),
  account('ForexLoss','Expenses','Accounts'/'ForexLoss',0),
  account('Gst','CurrentLiabilities','Accounts'/'Gst',0),
  account('GstPayable','Gst','Accounts'/'GstPayable',0),
  account('GstReceivable','Gst','Accounts'/'GstReceivable',0),
  account('HistoricalEarnings',
	  'RetainedEarnings',
	  'Accounts' / 'HistoricalEarnings',
	  0),
  account('Income','Revenue','Accounts'/'Income',0),
  account('InterestEarned','OtherIncome','Accounts'/'InterestEarned',0),
  account('InterestExpenses','Expenses','Accounts'/'InterestExpenses',0),
  account('InterestIncome','OtherIncome','Accounts'/'InterestIncome',0),
  account('InvestmentIncome','Revenue','Accounts'/'InvestmentIncome',0),
  account('Liabilities','NetAssets','Accounts'/'Liabilities',0),
  account('LivestockAdjustment','Expenses','Accounts'/'LivestockAdjustment',0),
  account('NetAssets','Accounts','Accounts'/'NetAssets',0),
  account('NetIncomeLoss','Accounts','Accounts'/'NetIncomeLoss',0),
  account('NoncurrentAssets','Assets','Accounts'/'NoncurrentAssets',0),
  account('NoncurrentLiabilities',
	  'Liabilities',
	  'Accounts' / 'NoncurrentLiabilities',
	  0),
  account('NoncurrentLoans',
	  'NoncurrentLiabilities',
	  'Accounts' / 'NoncurrentLoans',
	  0),
  account('OtherExpenses','Expenses','Accounts'/'OtherExpenses',0),
  account('OtherGain','Revenue','Accounts'/'OtherGain',0),
  account('OtherIncome','Revenue','Accounts'/'OtherIncome',0),
  account('Purchases','Expenses','Accounts'/'Purchases',0),
  account('RationsRevenue','Revenue','Accounts'/'RationsRevenue',0),
  account('RetainedEarnings','Equity','Accounts'/'RetainedEarnings',0),
  account('Revenue','NetIncomeLoss','Accounts'/'Revenue',0),
  account('SalesOfLivestock','Revenue','Accounts'/'SalesOfLivestock',0),
  account('ShareCapital','Equity','Accounts'/'ShareCapital',0)
]

-->


<!--generate system accounts...-->
<!--...generated system accounts-->

<!--Generated accounts:
[ account('Inventory',accountHierarchy,accountHierarchy/'Inventory',0),
  account('LivestockCount','Inventory','Inventory'/'LivestockCount',0),
  account('BanksWellsFargo','Banks','Banks'/'WellsFargo',1),
  account('CurrencyMovementWellsFargo',
	  'CurrencyMovement',
	  'CurrencyMovement' / 'WellsFargo',
	  0),
  account('InvestmentIncomeRealized',
	  'InvestmentIncome',
	  'InvestmentIncome' / realized,
	  0),
  account('InvestmentIncomeRealizedOnlyCurrencyMovement',
	  'InvestmentIncomeRealized',
	  'InvestmentIncomeRealized' / onlyCurrencyMovement,
	  0),
  account('InvestmentIncomeRealizedWithoutCurrencyMovement',
	  'InvestmentIncomeRealized',
	  'InvestmentIncomeRealized' / withoutCurrencyMovement,
	  0),
  account('InvestmentIncomeUnrealized',
	  'InvestmentIncome',
	  'InvestmentIncome' / unrealized,
	  0),
  account('InvestmentIncomeUnrealizedOnlyCurrencyMovement',
	  'InvestmentIncomeUnrealized',
	  'InvestmentIncomeUnrealized' / onlyCurrencyMovement,
	  0),
  account('InvestmentIncomeUnrealizedWithoutCurrencyMovement',
	  'InvestmentIncomeUnrealized',
	  'InvestmentIncomeUnrealized' / withoutCurrencyMovement,
	  0)
]

-->



<!--Transactions_With_Livestock:
[ transaction(date(2017,7,1),
	      'Introduce_Capital - incoming money',
	      'BanksWellsFargo',
	      [coord('AUD',200)],
	      instant),
  transaction(date(2017,7,1),
	      'Introduce_Capital',
	      'ShareCapital',
	      [coord('AUD',-200.0)],
	      instant),
  transaction(date(2017,7,10),
	      'Purchase_Method_C - outgoing money',
	      'BanksWellsFargo',
	      [coord('AUD',-200)],
	      instant),
  transaction(date(2017,7,10),
	      'Purchase_Method_C',
	      'Purchases',
	      [coord('AUD',200.0)],
	      instant),
  transaction(date(2018,6,28),
	      'Sale_Method_C - incoming money',
	      'BanksWellsFargo',
	      [coord('AUD',400)],
	      instant),
  transaction(date(2018,6,28),
	      'Sale_Method_C',
	      'Income',
	      [coord('AUD',-400.0)],
	      instant)
]

Transaction_Transformation_Debug:
s_transaction(date(2017,7,1),
	      uri("1575373234.0167632.33/rdf#bn486"),
	      [coord('AUD',200)],
	      'WellsFargo',
	      vector([]))==>
date(2017,7,1): BanksWellsFargo
  Introduce_Capital - incoming money
  DR:U553:coord('AUD',200)

date(2017,7,1): ShareCapital
  Introduce_Capital
  CR:U553:coord('AUD',-200.0)


====
s_transaction(date(2017,7,10),
	      uri("1575373234.0167632.33/rdf#bn489"),
	      [coord('AUD',-200)],
	      'WellsFargo',
	      vector([]))==>
date(2017,7,10): BanksWellsFargo
  Purchase_Method_C - outgoing money
  CR:U554:coord('AUD',-200)

date(2017,7,10): Purchases
  Purchase_Method_C
  DR:U554:coord('AUD',200.0)


====
s_transaction(date(2018,6,28),
	      uri("1575373234.0167632.33/rdf#bn490"),
	      [coord('AUD',400)],
	      'WellsFargo',
	      vector([]))==>
date(2018,6,28): BanksWellsFargo
  Sale_Method_C - incoming money
  DR:U555:coord('AUD',400)

date(2018,6,28): Income
  Sale_Method_C
  CR:U555:coord('AUD',-400.0)


====
done.

-->


<!-- 
[][] -->

<!--Exchange rates2:
[[],[],[],[]]

-->


<!-- exchange rates 2:
[]
-->
<!-- compiling Trial balance -->
<!-- compiling Balance sheet -->
<!-- compiling Profit and loss -->
<xbrli:xbrl xmlns:xbrli="http://www.xbrl.org/2003/instance" xmlns:link="http://www.xbrl.org/2003/linkbase" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:iso4217="http://www.xbrl.org/2003/iso4217" xmlns:basic="http://www.xbrlsite.com/basic" xmlns:xbrldi="http://xbrl.org/2006/xbrldi" xsi:schemaLocation="http://www.xbrlsite.com/basic taxonomy/basic.xsd http://www.xbrl.org/2003/instance http://www.xbrl.org/2003/xbrl-instance-2003-12-31.xsd http://www.xbrl.org/2003/linkbase http://www.xbrl.org/2003/xbrl-linkbase-2003-12-31.xsd http://xbrl.org/2006/xbrldi http://www.xbrl.org/2006/xbrldi-2006.xsd">
  <link:schemaRef xlink:type="simple" xlink:href="taxonomy/basic.xsd" xlink:title="Taxonomy schema" />
  <link:linkbaseRef xlink:type="simple" xlink:href="taxonomy/basic-formulas.xml" xlink:arcrole="http://www.w3.org/1999/xlink/properties/linkbase" />
  <link:linkBaseRef xlink:type="simple" xlink:href="taxonomy/basic-formulas-cross-checks.xml" xlink:arcrole="http://www.w3.org/1999/xlink/properties/linkbase" />

<!-- 'AUD' -->
  <xbrli:unit id="U-AUD"><xbrli:measure>iso4217:AUD</xbrli:measure></xbrli:unit>


<xbrli:context id="I-2018">
	<xbrli:period>
		<xbrli:instant>2018-06-30</xbrli:instant>
	</xbrli:period>
	<xbrli:entity>
		<identifier scheme="http://www.example.com">TestData</identifier>
	</xbrli:entity>
</xbrli:context>
<xbrli:context id="D-2018">
	<xbrli:period>
		<xbrli:startDate>2015-07-01</xbrli:startDate>
		<xbrli:endDate>2018-06-30</xbrli:endDate>
	</xbrli:period>
	<xbrli:entity>
		<identifier scheme="http://www.example.com">TestData</identifier>
	</xbrli:entity>
</xbrli:context>
<xbrli:context id="I-2018-WellsFargo">
	<xbrli:period>
		<xbrli:instant>2018-06-30</xbrli:instant>
	</xbrli:period>
	<xbrli:entity>
		<identifier scheme="http://www.example.com">TestData</identifier>
	</xbrli:entity>
		<xbrli:scenario>
			<xbrldi:typedMember dimension="basic:Dimension_BankAccounts_Instant">
			<basic:BankAccount_Instant><name>BanksWellsFargo</name><value>10000</value></basic:BankAccount_Instant>
			</xbrldi:typedMember>
		</xbrli:scenario>
</xbrli:context>
<xbrli:context id="D-2018-WellsFargo">
	<xbrli:period>
		<xbrli:startDate>2015-07-01</xbrli:startDate>
		<xbrli:endDate>2018-06-30</xbrli:endDate>
	</xbrli:period>
	<xbrli:entity>
		<identifier scheme="http://www.example.com">TestData</identifier>
		<xbrli:segment>
			<xbrldi:typedMember dimension="basic:Dimension_BankAccounts_Duration">
			<basic:BankAccount_Duration>WellsFargo</basic:BankAccount_Duration>
			</xbrldi:typedMember>
		</xbrli:segment>
	</xbrli:entity>
</xbrli:context>


<!-- dimensional facts: -->
  <basic:Banks contextRef="I-2018-WellsFargo" unitRef="U-AUD" decimals="INF">400.00</basic:Banks>

<!-- balance sheet: -->
 <basic:NetAssets contextRef="I-2018" unitRef="U-AUD" decimals="INF">400.00</basic:NetAssets>
  <basic:Assets contextRef="I-2018" unitRef="U-AUD" decimals="INF">400.00</basic:Assets>
   <basic:CurrentAssets contextRef="I-2018" unitRef="U-AUD" decimals="INF">400.00</basic:CurrentAssets>
    <basic:CashAndCashEquivalents contextRef="I-2018" unitRef="U-AUD" decimals="INF">400.00</basic:CashAndCashEquivalents>
     <basic:Banks contextRef="I-2018" unitRef="U-AUD" decimals="INF">400.00</basic:Banks>
 <basic:Equity contextRef="I-2018" unitRef="U-AUD" decimals="INF">400.00</basic:Equity>
  <basic:RetainedEarnings contextRef="I-2018" unitRef="U-AUD" decimals="INF">200.00</basic:RetainedEarnings>
   <basic:CurrentEarnings contextRef="I-2018" unitRef="U-AUD" decimals="INF">200.00</basic:CurrentEarnings>
  <basic:ShareCapital contextRef="I-2018" unitRef="U-AUD" decimals="INF">200.00</basic:ShareCapital>

<!-- profit and loss: -->
 <basic:NetIncomeLoss contextRef="D-2018" unitRef="U-AUD" decimals="INF">200.00</basic:NetIncomeLoss>
  <basic:Expenses contextRef="D-2018" unitRef="U-AUD" decimals="INF">200.00</basic:Expenses>
   <basic:Purchases contextRef="D-2018" unitRef="U-AUD" decimals="INF">200.00</basic:Purchases>
  <basic:Revenue contextRef="D-2018" unitRef="U-AUD" decimals="INF">400.00</basic:Revenue>
   <basic:Income contextRef="D-2018" unitRef="U-AUD" decimals="INF">400.00</basic:Income>

<!-- historical profit and loss (fixme wrong context id): 
 <basic:NetIncomeLoss contextRef="D-2018" unitRef="U-AUD" decimals="INF">0.00</basic:NetIncomeLoss>

-->

<!-- trial balance: -->
 <basic:Trial_Balance contextRef="I-2018" unitRef="U-AUD" decimals="INF">0.00</basic:Trial_Balance>

</xbrli:xbrl>
<!-- 
[]
[] -->


