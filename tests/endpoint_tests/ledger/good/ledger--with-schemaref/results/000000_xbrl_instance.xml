<?xml version="1.0"?>


 <!-- reports:  {
  "alerts": [],
  "reports": [
    {
      "id":"gl_html",
      "key":"GL viewer",
      "val": {
	"url":"http://koom-KVM:8080/tmp/1574486217.4708467.35/general_ledger_viewer/gl.html"
      }
    },
    {
      "id":"balance_sheet_html",
      "key":"balance sheet from 2015-07-01 to 2018-06-30 (AUD)",
      "val": {
	"url":"http://koom-KVM:8080/tmp/1574486217.4708467.35/balance_sheet.html"
      }
    },
    {
      "id":"profit_and_loss_html",
      "key":"profit&loss from 2015-07-01 to 2018-06-30 (AUD)",
      "val": {
	"url":"http://koom-KVM:8080/tmp/1574486217.4708467.35/profit_and_loss.html"
      }
    },
    {
      "id":"profit_and_loss_historical_html",
      "key":"profit&loss from 1-01-01 to 2015-06-30 (AUD)",
      "val": {
	"url":"http://koom-KVM:8080/tmp/1574486217.4708467.35/profit_and_loss_historical.html"
      }
    },
    {
      "id":"general_ledger_json",
      "key":"General Ledger Report",
      "val": {
	"url":"http://koom-KVM:8080/tmp/1574486217.4708467.35/general_ledger.json"
      }
    },
    {
      "id":"investment_report_html",
      "key":"investment report from 2015-07-01 to 2018-06-30 (AUD)",
      "val": {
	"url":"http://koom-KVM:8080/tmp/1574486217.4708467.35/investment_report.html"
      }
    },
    {
      "id":"investment_report_json",
      "key":"investment_report.json",
      "val": {
	"url":"http://koom-KVM:8080/tmp/1574486217.4708467.35/investment_report.json"
      }
    },
    {
      "id":"investment_report_since_beginning_html",
      "key":"investment report from 1-01-01 to 2018-06-30 (AUD)",
      "val": {
	"url":"http://koom-KVM:8080/tmp/1574486217.4708467.35/investment_report_since_beginning.html"
      }
    },
    {
      "id":"investment_report_since_beginning_json",
      "key":"investment_report_since_beginning.json",
      "val": {
	"url":"http://koom-KVM:8080/tmp/1574486217.4708467.35/investment_report_since_beginning.json"
      }
    },
    {
      "id":"crosschecks_html",
      "key":"crosschecks",
      "val": {
	"url":"http://koom-KVM:8080/tmp/1574486217.4708467.35/crosschecks.html"
      }
    },
    {
      "id":"response_xml",
      "key":"xbrl instance",
      "val": {
	"url":"http://koom-KVM:8080/tmp/1574486217.4708467.35/response.xml"
      }
    },
    {
      "id":"request_xml",
      "key":"request_xml",
      "val": {
	"url":"http://koom-KVM:8080/tmp/1574486217.4708467.35/request.xml"
      }
    },
    {
      "id":"all",
      "key":"all files",
      "val": {"url":"http://koom-KVM:8080/tmp/1574486217.4708467.35/"}
    }
  ]
} --> <!-- 
[] -->

<!--Exchange rates extracted:
[ exchange_rate(date(2018,6,30),'BHP','USD',2),
  exchange_rate(date(2018,6,30),'TLS','AUD',5)
]

Accounts extracted:
[ account('Accounts',accountHierarchy,'Accounts'/'Accounts',0),
  account('AdditionalLongtermBorrowings2',
	  'NetCashFlowFinancingActivities',
	  'Accounts' / 'AdditionalLongtermBorrowings2',
	  0),
  account('Assets','NetAssets','Accounts'/'Assets',0),
  account('BankCharges','Expenses','Accounts'/'BankCharges',0),
  account('Banks','CashAndCashEquivalents','Accounts'/'Banks',0),
  account('Bonds','FinancialInvestments','Accounts'/'Bonds',0),
  account('CapitalAdditionsPropertyPlantAndEquipment2',
	  'NetCashFlowInvestingActivities',
	  'Accounts' / 'CapitalAdditionsPropertyPlantAndEquipment2',
	  0),
  account('CapitalGain','InvestmentIncome','Accounts'/'CapitalGain',0),
  account('CashAndCashEquivalents',
	  'CurrentAssets',
	  'Accounts' / 'CashAndCashEquivalents',
	  0),
  account('CollectionReceivables',
	  'NetCashFlowOperatingActivities',
	  'Accounts' / 'CollectionReceivables',
	  0),
  account('CurrencyMovement','Revenue','Accounts'/'CurrencyMovement',0),
  account('CurrentAssets','Assets','Accounts'/'CurrentAssets',0),
  account('CurrentEarnings','RetainedEarnings','Accounts'/'CurrentEarnings',0),
  account('DividendsEarned','InvestmentIncome','Accounts'/'DividendsEarned',0),
  account('Equity','Accounts','Accounts'/'Equity',0),
  account('Expenses','NetIncomeLoss','Accounts'/'Expenses',0),
  account('Expenses',accountHierarchy,'Accounts'/'Expenses',0),
  account('FinancialInvestments',
	  'NoncurrentAssets',
	  'Accounts' / 'FinancialInvestments',
	  0),
  account('FinishedGoods','Accounts','Accounts'/'FinishedGoods',0),
  account('ForexGain','InvestmentIncome','Accounts'/'ForexGain',0),
  account('ForexLoss','Expenses','Accounts'/'ForexLoss',0),
  account('HistoricalEarnings',
	  'RetainedEarnings',
	  'Accounts' / 'HistoricalEarnings',
	  0),
  account('InterestEarned','InvestmentIncome','Accounts'/'InterestEarned',0),
  account('InvestmentIncome','Revenue','Accounts'/'InvestmentIncome',0),
  account('Liabilities','NetAssets','Accounts'/'Liabilities',0),
  account('NetAssets','Accounts','Accounts'/'NetAssets',0),
  account('NetCashFlow','Accounts','Accounts'/'NetCashFlow',0),
  account('NetCashFlowFinancingActivities',
	  'NetCashFlow',
	  'Accounts' / 'NetCashFlowFinancingActivities',
	  0),
  account('NetCashFlowInvestingActivities',
	  'NetCashFlow',
	  'Accounts' / 'NetCashFlowInvestingActivities',
	  0),
  account('NetCashFlowOperatingActivities',
	  'NetCashFlow',
	  'Accounts' / 'NetCashFlowOperatingActivities',
	  0),
  account('NetIncomeLoss','Accounts','Accounts'/'NetIncomeLoss',0),
  account('NoncurrentAssets','Assets','Accounts'/'NoncurrentAssets',0),
  account('NoncurrentLiabilities',
	  'Liabilities',
	  'Accounts' / 'NoncurrentLiabilities',
	  0),
  account('NoncurrentLoans',
	  'NoncurrentLiabilities',
	  'Accounts' / 'NoncurrentLoans',
	  0),
  account('PaymentOfAccountsPayable',
	  'NetCashFlowOperatingActivities',
	  'Accounts' / 'PaymentOfAccountsPayable',
	  0),
  account('ProductAlpha','FinishedGoods','Accounts'/'ProductAlpha',0),
  account('ProductBravo','FinishedGoods','Accounts'/'ProductBravo',0),
  account('RepaymentLongtermBorrowings2',
	  'NetCashFlowFinancingActivities',
	  'Accounts' / 'RepaymentLongtermBorrowings2',
	  0),
  account('RetainedEarnings','Equity','Accounts'/'RetainedEarnings',0),
  account('Revenue','NetIncomeLoss','Accounts'/'Revenue',0),
  account('ShareCapital','Equity','Accounts'/'ShareCapital',0),
  account('Shares','FinancialInvestments','Accounts'/'Shares',0),
  account('Unit_Investment',
	  'FinancialInvestments',
	  'Accounts' / 'Unit_Investment',
	  0),
  account(mashedPotatoes,yummyFoods,'Accounts'/mashedPotatoes,0),
  account(yummyFoods,'Expenses','Accounts'/yummyFoods,0)
]

-->


<!--generate system accounts...-->
<!--...generated system accounts-->

<!--Generated accounts:
[ account('ClearingAccount','Equity','Accounts'/'ClearingAccount',0),
  account('Inventory',accountHierarchy,accountHierarchy/'Inventory',0),
  account('LivestockCount','Inventory','Inventory'/'LivestockCount',0),
  account('AssetsLivestockAtCost',
	  'NoncurrentAssets',
	  'Accounts' / 'AssetsLivestockAtCost',
	  0),
  account('AssetsLivestockAtAverageCost',
	  'NoncurrentAssets',
	  'Accounts' / 'AssetsLivestockAtAverageCost',
	  0),
  account('CapitalIntroduced','Equity','Accounts'/'CapitalIntroduced',0),
  account('ExchangeGain','Revenue','Accounts'/'ExchangeGain',0),
  account('AccountingFees','Expenses','Accounts'/'AccountingFees',0),
  account('BanksNationalAustraliaBank',
	  'Banks',
	  'Banks' / 'NationalAustraliaBank',
	  1),
  account('BanksWellsFargo','Banks','Banks'/'WellsFargo',1),
  account('CurrencyMovementNationalAustraliaBank',
	  'CurrencyMovement',
	  'CurrencyMovement' / 'NationalAustraliaBank',
	  0),
  account('CurrencyMovementWellsFargo',
	  'CurrencyMovement',
	  'CurrencyMovement' / 'WellsFargo',
	  0),
  account('InvestmentIncomeRealized',
	  'InvestmentIncome',
	  'InvestmentIncome' / realized,
	  0),
  account('InvestmentIncomeRealizedOnlyCurrencyMovement',
	  'InvestmentIncomeRealized',
	  'InvestmentIncomeRealized' / onlyCurrencyMovement,
	  0),
  account('InvestmentIncomeRealizedOnlyCurrencyMovementBHP',
	  'InvestmentIncomeRealizedOnlyCurrencyMovement',
	  'InvestmentIncomeRealizedOnlyCurrencyMovement' / 'BHP',
	  1),
  account('InvestmentIncomeRealizedWithoutCurrencyMovement',
	  'InvestmentIncomeRealized',
	  'InvestmentIncomeRealized' / withoutCurrencyMovement,
	  0),
  account('InvestmentIncomeRealizedWithoutCurrencyMovementBHP',
	  'InvestmentIncomeRealizedWithoutCurrencyMovement',
	  'InvestmentIncomeRealizedWithoutCurrencyMovement' / 'BHP',
	  1),
  account('InvestmentIncomeUnrealized',
	  'InvestmentIncome',
	  'InvestmentIncome' / unrealized,
	  0),
  account('InvestmentIncomeUnrealizedOnlyCurrencyMovement',
	  'InvestmentIncomeUnrealized',
	  'InvestmentIncomeUnrealized' / onlyCurrencyMovement,
	  0),
  account('InvestmentIncomeUnrealizedOnlyCurrencyMovementBHP',
	  'InvestmentIncomeUnrealizedOnlyCurrencyMovement',
	  'InvestmentIncomeUnrealizedOnlyCurrencyMovement' / 'BHP',
	  1),
  account('InvestmentIncomeUnrealizedWithoutCurrencyMovement',
	  'InvestmentIncomeUnrealized',
	  'InvestmentIncomeUnrealized' / withoutCurrencyMovement,
	  0),
  account('InvestmentIncomeUnrealizedWithoutCurrencyMovementBHP',
	  'InvestmentIncomeUnrealizedWithoutCurrencyMovement',
	  'InvestmentIncomeUnrealizedWithoutCurrencyMovement' / 'BHP',
	  1),
  account('FinancialInvestmentsBHP',
	  'FinancialInvestments',
	  'FinancialInvestments' / 'BHP',
	  1)
]

-->



<!--Transaction_Transformation_Debug:
s_transaction(date(2017,7,1),
	      'Introduce_Capital',
	      [coord('USD',200,0)],
	      'WellsFargo',
	      vector([]))==>
date(2017,7,1): BanksWellsFargo
  Introduce_Capital - incoming money
  DR:U579:coord('USD',200,0)

date(2017,7,1): CurrencyMovementWellsFargo
  Introduce_Capital - incoming money - currency movement adjustment - only current period
  CR:U579:coord('USD',0,200)
  DR:U580:coord(without_currency_movement_against_since('USD','USD',['AUD'],date(2017,7,1)),200,0)

date(2017,7,1): ShareCapital
  Introduce_Capital
  CR:U581:coord('AUD',0.0,260.1118)


====
s_transaction(date(2017,7,10),
	      'Invest_In',
	      [coord('USD',0.0,100.0)],
	      'WellsFargo',
	      vector([coord('BHP',10,0)]))==>
date(2017,7,10): BanksWellsFargo
  Invest_In - outgoing money
  CR:U582:coord('USD',0.0,100.0)

date(2017,7,10): CurrencyMovementWellsFargo
  Invest_In - outgoing money - currency movement adjustment - only current period
  DR:U582:coord('USD',100.0,0.0)
  CR:U583:coord(without_currency_movement_against_since('USD','USD',['AUD'],date(2017,7,10)),0.0,100.0)

date(2017,7,10): FinancialInvestmentsBHP
  Invest_In
  DR:U584:coord('BHP',10,0)

date(2017,7,10): InvestmentIncomeUnrealizedOnlyCurrencyMovementBHP
  comment:?, comment2:Invest_In - single period
  CR:U584:coord('BHP',0,10)
  DR:U585:coord(without_currency_movement_against_since('BHP','USD',['AUD'],date(2017,7,10)),10,0)

date(2017,7,10): InvestmentIncomeUnrealizedWithoutCurrencyMovementBHP
  comment:?, comment2:Invest_In - single period
  CR:U585:coord(without_currency_movement_against_since('BHP','USD',['AUD'],date(2017,7,10)),0,10)
  DR:U586:coord('AUD',131.464,0)


====
s_transaction(date(2017,8,1),
	      'Borrow',
	      [coord('AUD',100,0)],
	      'NationalAustraliaBank',
	      vector([]))==>
date(2017,8,1): BanksNationalAustraliaBank
  Borrow - incoming money
  DR:U587:coord('AUD',100,0)

date(2017,8,1): NoncurrentLoans
  Borrow
  CR:U587:coord('AUD',0.0,100.0)


====
s_transaction(date(2018,6,28),
	      'Pay_Bank',
	      [coord('USD',0.0,10)],
	      'WellsFargo',
	      vector([]))==>
date(2018,6,28): BanksWellsFargo
  Pay_Bank - outgoing money
  CR:U588:coord('USD',0.0,10)

date(2018,6,28): CurrencyMovementWellsFargo
  Pay_Bank - outgoing money - currency movement adjustment - only current period
  DR:U588:coord('USD',10.0,0.0)
  CR:U589:coord(without_currency_movement_against_since('USD','USD',['AUD'],date(2018,6,28)),0.0,10.0)

date(2018,6,28): BankCharges
  Pay_Bank
  DR:U590:coord('AUD',13.60971,0.0)


====
done.

-->


<!-- 
[][] -->

<!--Exchange rates2:
[ [ exchange_rate(date(2017,7,1),'USD','AUD',1.300559),
    exchange_rate(date(2017,7,1),
		  without_currency_movement_against_since('USD',
							  'USD',
							  ['AUD'],
							  date(2017,
							       7,
							       1)),
		  'AUD',
		  1.300559)
  ],
  [ exchange_rate(date(2017,7,10),'USD','AUD',1.31464),
    exchange_rate(date(2017,7,10),
		  without_currency_movement_against_since('USD',
							  'USD',
							  ['AUD'],
							  date(2017,
							       7,
							       10)),
		  'AUD',
		  1.31464)
  ],
  [],
  [ exchange_rate(date(2018,6,28),'USD','AUD',1.360971),
    exchange_rate(date(2018,6,28),
		  without_currency_movement_against_since('USD',
							  'USD',
							  ['AUD'],
							  date(2018,
							       6,
							       28)),
		  'AUD',
		  1.360971)
  ],
  [ exchange_rate(date(2018,6,30),'BHP','AUD',2.701608),
    exchange_rate(date(2018,6,30),'USD','AUD',1.350804),
    exchange_rate(date(2018,6,30),
		  without_currency_movement_against_since('BHP',
							  'USD',
							  ['AUD'],
							  date(2017,
							       7,
							       10)),
		  'AUD',
		  2.62928),
    exchange_rate(date(2018,6,30),
		  without_currency_movement_against_since('USD',
							  'USD',
							  ['AUD'],
							  date(2017,
							       7,
							       1)),
		  'AUD',
		  1.300559),
    exchange_rate(date(2018,6,30),
		  without_currency_movement_against_since('USD',
							  'USD',
							  ['AUD'],
							  date(2017,
							       7,
							       10)),
		  'AUD',
		  1.31464),
    exchange_rate(date(2018,6,30),
		  without_currency_movement_against_since('USD',
							  'USD',
							  ['AUD'],
							  date(2018,
							       6,
							       28)),
		  'AUD',
		  1.360971)
  ]
]

-->


<!-- exchange rates 2:
[exchange_rate(date(2018,6,30),BHP,USD,2),exchange_rate(date(2018,6,30),TLS,AUD,5)]
-->
<!-- compiling Trial balance -->
<!-- compiling Balance sheet -->
<!-- compiling Profit and loss -->
<xbrli:xbrl xmlns:xbrli="http://www.xbrl.org/2003/instance" xmlns:link="http://www.xbrl.org/2003/linkbase" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:iso4217="http://www.xbrl.org/2003/iso4217" xmlns:basic="http://www.xbrlsite.com/basic" xmlns:xbrldi="http://xbrl.org/2006/xbrldi" xsi:schemaLocation="http://www.xbrlsite.com/basic taxonomy/basic.xsd http://www.xbrl.org/2003/instance http://www.xbrl.org/2003/xbrl-instance-2003-12-31.xsd http://www.xbrl.org/2003/linkbase http://www.xbrl.org/2003/xbrl-linkbase-2003-12-31.xsd http://xbrl.org/2006/xbrldi http://www.xbrl.org/2006/xbrldi-2006.xsd">
  <link:schemaRef xlink:type="simple" xlink:href="taxonomy/basic.xsd" xlink:title="Taxonomy schema" />
  <link:linkbaseRef xlink:type="simple" xlink:href="taxonomy/basic-formulas.xml" xlink:arcrole="http://www.w3.org/1999/xlink/properties/linkbase" />
  <link:linkBaseRef xlink:type="simple" xlink:href="taxonomy/basic-formulas-cross-checks.xml" xlink:arcrole="http://www.w3.org/1999/xlink/properties/linkbase" />

<!-- 'AUD' -->
  <xbrli:unit id="U-AUD"><xbrli:measure>iso4217:AUD</xbrli:measure></xbrli:unit>


<xbrli:context id="I-2018">
	<xbrli:period>
		<xbrli:instant>2018-06-30</xbrli:instant>
	</xbrli:period>
	<xbrli:entity>
		<identifier scheme="http://www.example.com">TestData</identifier>
	</xbrli:entity>
</xbrli:context>
<xbrli:context id="D-2018">
	<xbrli:period>
		<xbrli:startDate>2015-07-01</xbrli:startDate>
		<xbrli:endDate>2018-06-30</xbrli:endDate>
	</xbrli:period>
	<xbrli:entity>
		<identifier scheme="http://www.example.com">TestData</identifier>
	</xbrli:entity>
</xbrli:context>
<xbrli:context id="I-2018-NationalAustraliaBank">
	<xbrli:period>
		<xbrli:instant>2018-06-30</xbrli:instant>
	</xbrli:period>
	<xbrli:entity>
		<identifier scheme="http://www.example.com">TestData</identifier>
	</xbrli:entity>
		<xbrli:scenario>
			<xbrldi:typedMember dimension="basic:Dimension_BankAccounts_Instant">
			<basic:BankAccount_Instant><name>BanksNationalAustraliaBank</name><value>10000</value></basic:BankAccount_Instant>
			</xbrldi:typedMember>
		</xbrli:scenario>
</xbrli:context>
<xbrli:context id="I-2018-WellsFargo">
	<xbrli:period>
		<xbrli:instant>2018-06-30</xbrli:instant>
	</xbrli:period>
	<xbrli:entity>
		<identifier scheme="http://www.example.com">TestData</identifier>
	</xbrli:entity>
		<xbrli:scenario>
			<xbrldi:typedMember dimension="basic:Dimension_BankAccounts_Instant">
			<basic:BankAccount_Instant><name>BanksWellsFargo</name><value>20000</value></basic:BankAccount_Instant>
			</xbrldi:typedMember>
		</xbrli:scenario>
</xbrli:context>
<xbrli:context id="D-2018-NationalAustraliaBank">
	<xbrli:period>
		<xbrli:startDate>2015-07-01</xbrli:startDate>
		<xbrli:endDate>2018-06-30</xbrli:endDate>
	</xbrli:period>
	<xbrli:entity>
		<identifier scheme="http://www.example.com">TestData</identifier>
		<xbrli:segment>
			<xbrldi:typedMember dimension="basic:Dimension_BankAccounts_Duration">
			<basic:BankAccount_Duration>NationalAustraliaBank</basic:BankAccount_Duration>
			</xbrldi:typedMember>
		</xbrli:segment>
	</xbrli:entity>
</xbrli:context>
<xbrli:context id="D-2018-WellsFargo">
	<xbrli:period>
		<xbrli:startDate>2015-07-01</xbrli:startDate>
		<xbrli:endDate>2018-06-30</xbrli:endDate>
	</xbrli:period>
	<xbrli:entity>
		<identifier scheme="http://www.example.com">TestData</identifier>
		<xbrli:segment>
			<xbrldi:typedMember dimension="basic:Dimension_BankAccounts_Duration">
			<basic:BankAccount_Duration>WellsFargo</basic:BankAccount_Duration>
			</xbrldi:typedMember>
		</xbrli:segment>
	</xbrli:entity>
</xbrli:context>
<xbrli:context id="D-2018-BHP">
	<xbrli:period>
		<xbrli:startDate>2015-07-01</xbrli:startDate>
		<xbrli:endDate>2018-06-30</xbrli:endDate>
	</xbrli:period>
	<xbrli:entity>
		<identifier scheme="http://www.example.com">TestData</identifier>
		<xbrli:segment>
			<xbrldi:typedMember dimension="basic:Dimension_Investments_Duration">
			<basic:Investment_Duration>BHP</basic:Investment_Duration>
			</xbrldi:typedMember>
		</xbrli:segment>
	</xbrli:entity>
</xbrli:context>


<!-- dimensional facts: -->
  <basic:Banks contextRef="I-2018-NationalAustraliaBank" unitRef="U-AUD" decimals="INF">100.00</basic:Banks>
  <basic:Banks contextRef="I-2018-WellsFargo" unitRef="U-AUD" decimals="INF">121.57</basic:Banks>
  <basic:CurrencyMovement contextRef="D-2018-WellsFargo" unitRef="U-AUD" decimals="INF">6.53</basic:CurrencyMovement>
  <basic:InvestmentIncomeUnrealizedOnlyCurrencyMovement contextRef="D-2018-BHP" unitRef="U-AUD" decimals="INF">0.72</basic:InvestmentIncomeUnrealizedOnlyCurrencyMovement>
  <basic:InvestmentIncomeUnrealizedWithoutCurrencyMovement contextRef="D-2018-BHP" unitRef="U-AUD" decimals="INF">-105.17</basic:InvestmentIncomeUnrealizedWithoutCurrencyMovement>

<!-- balance sheet: -->
 <basic:NetAssets contextRef="I-2018" unitRef="U-AUD" decimals="INF">148.59</basic:NetAssets>
  <basic:Assets contextRef="I-2018" unitRef="U-AUD" decimals="INF">248.59</basic:Assets>
   <basic:CurrentAssets contextRef="I-2018" unitRef="U-AUD" decimals="INF">221.57</basic:CurrentAssets>
    <basic:CashAndCashEquivalents contextRef="I-2018" unitRef="U-AUD" decimals="INF">221.57</basic:CashAndCashEquivalents>
     <basic:Banks contextRef="I-2018" unitRef="U-AUD" decimals="INF">221.57</basic:Banks>
   <basic:NoncurrentAssets contextRef="I-2018" unitRef="U-AUD" decimals="INF">27.02</basic:NoncurrentAssets>
    <basic:FinancialInvestments contextRef="I-2018" unitRef="U-AUD" decimals="INF">27.02</basic:FinancialInvestments>
  <basic:Liabilities contextRef="I-2018" unitRef="U-AUD" decimals="INF">100.00</basic:Liabilities>
   <basic:NoncurrentLiabilities contextRef="I-2018" unitRef="U-AUD" decimals="INF">100.00</basic:NoncurrentLiabilities>
    <basic:NoncurrentLoans contextRef="I-2018" unitRef="U-AUD" decimals="INF">100.00</basic:NoncurrentLoans>
 <basic:Equity contextRef="I-2018" unitRef="U-AUD" decimals="INF">148.59</basic:Equity>
  <basic:RetainedEarnings contextRef="I-2018" unitRef="U-AUD" decimals="INF">-111.52</basic:RetainedEarnings>
   <basic:CurrentEarnings contextRef="I-2018" unitRef="U-AUD" decimals="INF">-111.52</basic:CurrentEarnings>
  <basic:ShareCapital contextRef="I-2018" unitRef="U-AUD" decimals="INF">260.11</basic:ShareCapital>

<!-- profit and loss: -->
 <basic:NetIncomeLoss contextRef="D-2018" unitRef="U-AUD" decimals="INF">-111.52</basic:NetIncomeLoss>
  <basic:Expenses contextRef="D-2018" unitRef="U-AUD" decimals="INF">13.61</basic:Expenses>
   <basic:BankCharges contextRef="D-2018" unitRef="U-AUD" decimals="INF">13.61</basic:BankCharges>
  <basic:Revenue contextRef="D-2018" unitRef="U-AUD" decimals="INF">-97.91</basic:Revenue>
   <basic:CurrencyMovement contextRef="D-2018" unitRef="U-AUD" decimals="INF">6.53</basic:CurrencyMovement>
    <basic:CurrencyMovementWellsFargo contextRef="D-2018" unitRef="U-AUD" decimals="INF">6.53</basic:CurrencyMovementWellsFargo>
   <basic:InvestmentIncome contextRef="D-2018" unitRef="U-AUD" decimals="INF">-104.45</basic:InvestmentIncome>
    <basic:InvestmentIncomeUnrealized contextRef="D-2018" unitRef="U-AUD" decimals="INF">-104.45</basic:InvestmentIncomeUnrealized>
     <basic:InvestmentIncomeUnrealizedOnlyCurrencyMovement contextRef="D-2018" unitRef="U-AUD" decimals="INF">0.72</basic:InvestmentIncomeUnrealizedOnlyCurrencyMovement>
     <basic:InvestmentIncomeUnrealizedWithoutCurrencyMovement contextRef="D-2018" unitRef="U-AUD" decimals="INF">-105.17</basic:InvestmentIncomeUnrealizedWithoutCurrencyMovement>

<!-- historical profit and loss (fixme wrong context id): 
 <basic:NetIncomeLoss contextRef="D-2018" unitRef="U-AUD" decimals="INF">0.00</basic:NetIncomeLoss>

-->

<!-- trial balance: -->
 <basic:Trial_Balance contextRef="I-2018" unitRef="U-AUD" decimals="INF">0.00</basic:Trial_Balance>

</xbrli:xbrl>
<!-- 
[]
[] -->


