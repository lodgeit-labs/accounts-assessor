version: '3.7'

services:

  rabbitmq:
    image: rabbitmq
    networks:
      - backend
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure

  frontend_server:
    image: koo5/frontend_server
    environment:
      SECRET__INTERNAL_SERVICES_SERVER_URL: "http://internal_services:17788"
      SECRET__CELERY_BROKER_URL: "amqp://guest:guest@rabbitmq:5672//"
    volumes:
      - my-vol:/app/server_root/tmp
    networks:
      - backend
      - frontend
    depends_on:
      - rabbitmq
      - internal_services
      - internal_workers
    deploy:
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: on-failure
    ports:
      - 7788:7788


  internal_services:
    image: koo5/internal_services
    volumes:
      - my-vol:/app/server_root/tmp
    networks:
      - backend
    ports:
      - target: 17788
        published: 17788
        protocol: tcp
        mode: ingress
    depends_on:
      - rabbitmq
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: on-failure

  internal_workers:
    image: koo5/internal_workers
    environment:
      SECRET__INTERNAL_SERVICES_SERVER_URL: "http://internal_services:17788"
      SECRET__CELERY_BROKER_URL: "amqp://guest:guest@rabbitmq:5672//"
    volumes:
      - my-vol:/app/server_root/tmp
    networks:
      - backend
    depends_on:
      - rabbitmq
      - internal_services
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: on-failure

networks:
  frontend:
  backend:

volumes:
  my-vol:
