@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.

@base <https://rdf.lodgeit.net.au/v1/> .

@prefix : <excel_request#> .

@prefix l: <https://rdf.lodgeit.net.au/v1/request#> .
@prefix av: <https://rdf.lodgeit.net.au/v1/action_verbs#> .
@prefix excel: <https://rdf.lodgeit.net.au/v1/excel#> .
@prefix kb: <https://rdf.lodgeit.net.au/v1/kb#> .
@prefix account_taxonomies: <https://rdf.lodgeit.net.au/v1/account_taxonomies#> .

@prefix depr: <https://rdf.lodgeit.net.au/v1/calcs/depr#> .
@prefix ic: <https://rdf.lodgeit.net.au/v1/calcs/ic#> .
@prefix hp: <https://rdf.lodgeit.net.au/v1/calcs/hp#> .

@prefix depr_ui: <https://rdf.lodgeit.net.au/v1/calcs/depr/ui#> .
@prefix ic_ui: <https://rdf.lodgeit.net.au/v1/calcs/ic/ui#> .
@prefix hp_ui: <https://rdf.lodgeit.net.au/v1/calcs/hp/ui#> .

@prefix smsf: <https://rdf.lodgeit.net.au/v1/calcs/smsf#> .
@prefix smsf_ui: <https://rdf.lodgeit.net.au/v1/calcs/smsf/ui#> .
@prefix smsf_distribution: <https://rdf.lodgeit.net.au/v1/calcs/smsf/distribution#> .
@prefix smsf_distribution_ui: <https://rdf.lodgeit.net.au/v1/calcs/smsf/distribution_ui#> .
@prefix reallocation: <https://rdf.lodgeit.net.au/v1/calcs/ic/reallocation#> .


:request l:templates_version "2".


excel:this rdfs:comment
"""schema-directed GUI form ontology. We should align it with http://datashapes.org/forms.html somehow, but that's quite verbose, so possibly we should generate DASH from this and interpret dash. This way, our excel code could be used for any other rdf data that has SHACL/DASH, and our data could be rendered with another engine (topbraid,solidproject?)""".
hp:this rdfs:comment """hirepurchase""".
depr:this rdfs:comment """depreciation""".
ic:this rdfs:comment """investment calculator""".





kb:Asset a rdfs:Class.





excel:multiple_sheets_allowed rdfs:comment "are multiple sheets of this type allowed in one workbook?".



:this rdfs:comment """
excel:plugin
	excel:has_sheet_sets (
		smsf_ui:sheets
		hp_ui:hirepurchase_calculator_sheets
	).
""".

smsf_ui:sheets
	a excel:sheet_set;
	excel:sheets
	(
		smsf_ui:members_sheet
		smsf_ui:distribution_sheet
		smsf_ui:income_tax_sheet
	).

smsf_ui:members_sheet
	a excel:sheet_type;
	excel:optional true;
	excel:name_prefix "members";
	excel:root smsf:members.

smsf_ui:distribution_sheet
	a excel:sheet_type;
	excel:optional true;
	excel:name_prefix "distribution";
	excel:root smsf:distribution.

smsf_ui:income_tax_sheet
	a excel:sheet_type;
	excel:optional true;
	excel:name_prefix "income_tax";
	excel:root smsf:income_tax_info.

smsf_ui:example
	a excel:example_sheet_set;
	excel:label "Smsf template";
	excel:example_has_sheets (
		[	excel:has_sheet smsf_ui:members_sheet;
			excel:example_doc smsf_ui:members_sheet_example]
		[	excel:has_sheet smsf_ui:distribution_sheet;
			excel:example_doc smsf_ui:distribution_sheet_example]
		[	excel:has_sheet smsf_ui:income_tax_sheet;
			excel:example_doc smsf_ui:income_tax_sheet_example]
	).

smsf_ui:members_sheet_example rdf:value (
	[ a smsf_ui:members_sheet_entry;
		smsf:member_name [ a rdf:value ; rdf:value "Member 1" ]]
	[ a smsf_ui:members_sheet_entry;
		smsf:member_name [ a rdf:value ; rdf:value "Member 2" ]]
).

smsf_ui:distribution_sheet_example
	a smsf_distribution:distribution;
	smsf_distribution_ui:default_currency [ a rdf:value ; rdf:value "AUD"].

smsf:members
	excel:title "members";
	excel:position [excel:col "A"; excel:row "3"];
	excel:cardinality excel:multi;
	excel:class smsf:member;
	excel:fields (
		[excel:property smsf:member_name; excel:type xsd:string]
	).

smsf:distribution
	excel:title "distribution";
	excel:cardinality excel:single;
	excel:position [excel:col "A"; excel:row "4"];
	excel:class smsf_distribution:distribution;
	excel:fields (
		[excel:property smsf_distribution_ui:default_currency; excel:type xsd:string]
		[excel:property smsf_distribution_ui:items; excel:template smsf_distribution:items_template]
	).

smsf_distribution:items_template
	excel:title "distributions";
	excel:position [excel:col "A"; excel:row "7"];
	excel:cardinality excel:multi;
	excel:class smsf_distribution:entry;
	excel:is_horizontal true;
	excel:fields (
		[excel:property smsf_distribution_ui:name; excel:type xsd:string]
		[excel:property smsf_distribution_ui:net; excel:type xsd:decimal]
		[excel:property smsf_distribution_ui:bank; excel:type xsd:decimal]
		[excel:property smsf_distribution_ui:accrual; excel:type xsd:decimal]
		[excel:property smsf_distribution_ui:franking_credit; excel:type xsd:decimal]
		[excel:property smsf_distribution_ui:foreign_credit; excel:type xsd:decimal]
		[excel:property smsf_distribution_ui:amit_decrease; excel:type xsd:decimal]
		[excel:property smsf_distribution_ui:amit_increase; excel:type xsd:decimal]
		[excel:property smsf_distribution_ui:amit_net; excel:type xsd:decimal]
		[excel:property smsf_distribution_ui:non_primary_production_income ; excel:type xsd:decimal]
		[excel:property smsf_distribution_ui:franked_divis_distri_including_credits ; excel:type xsd:decimal]
		[excel:property smsf_distribution_ui:assessable_foreign_source_income ; excel:type xsd:decimal]
		[excel:property smsf_distribution_ui:net_trust_distribution_income ; excel:type xsd:decimal]
		[excel:property smsf_distribution_ui:capital_gains  ; excel:type xsd:decimal]
		[excel:property smsf_distribution_ui:capital_losses  ; excel:type xsd:decimal]
		[excel:property smsf_distribution_ui:discount_capital_gains_net  ; excel:type xsd:decimal]
		[excel:property smsf_distribution_ui:other_capital_gains ; excel:type xsd:decimal]
		[excel:property smsf_distribution_ui:one_third_capital_gain_discount_amount ; excel:type xsd:decimal]
		[excel:property smsf_distribution_ui:total_capital_gains_losses ; excel:type xsd:decimal]
	).

smsf_distribution_ui:name rdfs:label "Unit Type".
smsf_distribution_ui:net rdfs:label "Net Cash Distribution".
smsf_distribution_ui:bank rdfs:label "Cash Distribution as per bank".

# calculated on server, just checked
smsf_distribution_ui:accrual rdfs:label "Resolved Accrual".

smsf_distribution_ui:franking_credit rdfs:label "Add: Franking Credit".
smsf_distribution_ui:foreign_credit rdfs:label "Add: Foreign Credit".
smsf_distribution_ui:amit_decrease rdfs:label "AMIT cost base net amount - excess (decrease)".
smsf_distribution_ui:amit_increase rdfs:label "AMIT cost base net amount - shortfall (increase)".

# calculated on server, just checked
smsf_distribution_ui:amit_net rdfs:label "Add: AMIT cost base net amount - net increase".

smsf_distribution_ui:non_primary_production_income rdfs:label "Non-primary Production Income".
smsf_distribution_ui:franked_divis_distri_including_credits rdfs:label "Franked Divis/Distri (Including Credits)".
smsf_distribution_ui:assessable_foreign_source_income rdfs:label "Assessable Foreign Source Income (Inc Credits)".

smsf_distribution_ui:net_trust_distribution_income rdfs:label "Net Trust distribution Income".



smsf_distribution_ui:capital_gains
	rdfs:label
		"Capital Gains".
smsf_distribution_ui:capital_losses
	rdfs:label
		"Capital Losses".
smsf_distribution_ui:discount_capital_gains_net
	rdfs:label
		"Discount Capital Gains (Net)".
smsf_distribution_ui:other_capital_gains
	 rdfs:label
		"Other Capital Gains".
smsf_distribution_ui:one_third_capital_gain_discount_amount
	 rdfs:label
		"1/3rd Capital Gain Discount Amount".
smsf_distribution_ui:total_capital_gains_losses
	 rdfs:label
		"Total Capital Gains/Losses".



smsf:income_tax_info
	excel:title "income_tax_info";
	excel:cardinality excel:single;
	excel:position [excel:col "A"; excel:row "4"];
	excel:class smsf:income_tax_info;
	excel:fields (
		[excel:property smsf:ato_supervisory_levy; excel:type xsd:decimal]
	).

smsf:ato_supervisory_levy rdfs:label "ATO Supervisory Levy".


smsf_ui:income_tax_sheet_example
	smsf:ato_supervisory_levy [ rdf:value "259"].



depr_ui:depreciation_calculator_sheets
	excel:sheets
	(
		depr_ui:depreciation_calculator_sheet_queries
		depr_ui:depreciation_calculator_sheet_events
		depr_ui:depreciation_calculator_sheet_assets
	).

depr_ui:depreciation_calculator_sheet_queries
	excel:name_prefix "depreciation_queries";
	excel:root depr_ui:depreciation_queries.

depr_ui:depreciation_calculator_sheet_events
	excel:optional true;
	excel:name_prefix "depreciation_events";
	excel:root depr_ui:depreciation_events.

depr_ui:depreciation_calculator_sheet_assets
	excel:name_prefix "depreciation_assets";
	excel:root depr_ui:depreciation_assets.

depr_ui:depreciation_example_simple
	excel:example_has_sheets (
		[	excel:has_sheet depr_ui:depreciation_calculator_sheet_queries;
			excel:example_doc depr_ui:depreciation_example_queries_simple]
		[	excel:has_sheet depr_ui:depreciation_calculator_sheet_assets;
			excel:example_doc depr_ui:depreciation_example_assets]
).

depr_ui:depreciation_example_full
	excel:example_has_sheets (
		[	excel:has_sheet depr_ui:depreciation_calculator_sheet_queries;
			excel:example_doc depr_ui:depreciation_example_queries_full]
		[	excel:has_sheet depr_ui:depreciation_calculator_sheet_events;
			excel:example_doc depr_ui:depreciation_example_events]
		[	excel:has_sheet depr_ui:depreciation_calculator_sheet_assets;
			excel:example_doc depr_ui:depreciation_example_assets]
).

depr_ui:depreciation_example_queries_simple rdf:value (
	[ a depr:depreciation_query ;
		depr:depreciation_query_has_type [ a rdf:value ;
				rdf:value depr:depreciation_between_two_dates ] ;
		depr:depreciation_query_method [ a rdf:value ;
				rdf:value depr:diminishing_value ] ;
		depr:depreciation_query_asset_id [ a rdf:value ;
				rdf:value "car123"^^xsd:string ] ;
		depr:depreciation_query_from_date [ a rdf:value ;
				rdf:value "2017-06-01T00:00:00"^^xsd:dateTime ] ;
		depr:depreciation_query_to_date [ a rdf:value ;
				rdf:value "2019-02-02T00:00:00"^^xsd:dateTime ] ]
	[ a depr:depreciation_query ;
		depr:depreciation_query_has_type [ a rdf:value ;
				rdf:value depr:depreciation_between_two_dates ] ;
		depr:depreciation_query_method [ a rdf:value ;
				rdf:value depr:prime_cost ] ;
		depr:depreciation_query_asset_id [ a rdf:value ;
				rdf:value "car123"^^xsd:string ] ;
		depr:depreciation_query_from_date [ a rdf:value ;
				rdf:value "2017-06-01T00:00:00"^^xsd:dateTime ] ;
		depr:depreciation_query_to_date [ a rdf:value ;
				rdf:value "2019-02-02T00:00:00"^^xsd:dateTime ] ]
	[ a depr:depreciation_query ;
		depr:depreciation_query_has_type [ a rdf:value ;
				rdf:value depr:written_down_value ] ;
		depr:depreciation_query_method [ a rdf:value ;
				rdf:value depr:diminishing_value ] ;
		depr:depreciation_query_asset_id [ a rdf:value ;
				rdf:value "car123"^^xsd:string ] ;
		depr:depreciation_query_written_down_date [ a rdf:value ;
				rdf:value "2019-07-07T00:00:00"^^xsd:dateTime ] ]
	[ a depr:depreciation_query ;
		depr:depreciation_query_has_type [ a rdf:value ;
				rdf:value depr:profit_and_loss ] ;
		depr:depreciation_query_method [ a rdf:value ;
				rdf:value depr:diminishing_value ] ;
		depr:depreciation_query_asset_id [ a rdf:value ;
				rdf:value "car123"^^xsd:string ] ;
		depr:depreciation_query_termination_date [ a rdf:value ;
				rdf:value "2019-07-07T00:00:00"^^xsd:dateTime ] ;
		depr:depreciation_query_termination_value [ a rdf:value ;
				rdf:value 200 ] ]
	[ a depr:depreciation_query ;
		depr:depreciation_query_has_type [ a rdf:value ;
				rdf:value depr:profit_and_loss ] ;
		depr:depreciation_query_method [ a rdf:value ;
				rdf:value depr:diminishing_value ] ;
		depr:depreciation_query_asset_id [ a rdf:value ;
				rdf:value "car123"^^xsd:string ] ;
		depr:depreciation_query_termination_date [ a rdf:value ;
				rdf:value "2019-07-07T00:00:00"^^xsd:dateTime ] ;
		depr:depreciation_query_termination_value [ a rdf:value ;
				rdf:value 700 ] ]
).

depr_ui:depreciation_example_queries_full rdf:value (
	[ a depr:depreciation_query ;
		depr:depreciation_query_has_type [ a rdf:value ;
				rdf:value depr:depreciation_pool_from_start ] ;
		depr:depreciation_query_method [ a rdf:value ;
				rdf:value depr:diminishing_value ] ;
		depr:depreciation_query_pool [ a rdf:value ;
				rdf:value "general_pool"^^xsd:string ] ;
		depr:depreciation_query_to_date [ a rdf:value ;
				rdf:value "2019-02-02T00:00:00"^^xsd:dateTime ] ]
	[ a depr:depreciation_query ;
		depr:depreciation_query_asset_id [ a rdf:value ;
				rdf:value "car123"^^xsd:string ] ;
		depr:depreciation_query_from_date [ a rdf:value ;
				rdf:value "2017-07-01T00:00:00"^^xsd:dateTime ] ;
		depr:depreciation_query_has_type [ a rdf:value ;
				rdf:value depr:depreciation_between_two_dates ] ;
		depr:depreciation_query_method [ a rdf:value ;
				rdf:value depr:diminishing_value ] ;
		depr:depreciation_query_to_date [ a rdf:value ;
				rdf:value "2019-02-02T00:00:00"^^xsd:dateTime ] ]
	[ a depr:depreciation_query ;
		depr:depreciation_query_asset_id [ a rdf:value ;
				rdf:value "car456"^^xsd:string ] ;
		depr:depreciation_query_from_date [ a rdf:value ;
				rdf:value "2017-07-01T00:00:00"^^xsd:dateTime ] ;
		depr:depreciation_query_has_type [ a rdf:value ;
				rdf:value depr:depreciation_between_two_dates ] ;
		depr:depreciation_query_method [ a rdf:value ;
				rdf:value depr:diminishing_value ] ;
		depr:depreciation_query_to_date [ a rdf:value ;
				rdf:value "2019-02-02T00:00:00"^^xsd:dateTime ] ]
	[ a depr:depreciation_query ;
		depr:depreciation_query_asset_id [ a rdf:value ;
				rdf:value "car123"^^xsd:string ] ;
		depr:depreciation_query_has_type [ a rdf:value ;
				rdf:value depr:written_down_value ] ;
		depr:depreciation_query_method [ a rdf:value ;
				rdf:value depr:diminishing_value ] ;
		depr:depreciation_query_written_down_date [ a rdf:value ;
				rdf:value "2017-06-01T00:00:00"^^xsd:dateTime ] ]
	[ a depr:depreciation_query ;
		depr:depreciation_query_asset_id [ a rdf:value ;
				rdf:value "car123"^^xsd:string ] ;
		depr:depreciation_query_has_type [ a rdf:value ;
				rdf:value depr:profit_and_loss ] ;
		depr:depreciation_query_method [ a rdf:value ;
				rdf:value depr:diminishing_value ] ;
		depr:depreciation_query_termination_date [ a rdf:value ;
				rdf:value "2019-07-07T00:00:00"^^xsd:dateTime ] ;
		depr:depreciation_query_termination_value [ a rdf:value ;
				rdf:value 500 ] ]
).

depr_ui:depreciation_example_events rdf:value (
	[ a depr:depreciation_event ;
	depr:depreciation_event_asset [ a rdf:value ;
			rdf:value "car123"^^xsd:string ] ;
	depr:depreciation_event_date [ a rdf:value ;
			rdf:value "2017-07-01T00:00:00"^^xsd:dateTime ] ;
	depr:depreciation_event_has_type [ a rdf:value ;
			rdf:value depr:transfer_asset_to_pool ] ;
	depr:depreciation_event_pool [ a rdf:value ;
			rdf:value "general_pool"^^xsd:string ] ]
	[ a depr:depreciation_event ;
	depr:depreciation_event_asset [ a rdf:value ;
			rdf:value "car456"^^xsd:string ] ;
	depr:depreciation_event_date [ a rdf:value ;
			rdf:value "2017-07-01T00:00:00"^^xsd:dateTime ] ;
	depr:depreciation_event_has_type [ a rdf:value ;
			rdf:value depr:transfer_asset_to_pool ] ;
	depr:depreciation_event_pool [ a rdf:value ;
			rdf:value "general_pool"^^xsd:string ] ]
	[ a depr:depreciation_event ;
	depr:depreciation_event_asset [ a rdf:value ;
			rdf:value "car123"^^xsd:string ] ;
	depr:depreciation_event_date [ a rdf:value ;
			rdf:value "2021-06-01T00:00:00"^^xsd:dateTime ] ;
	depr:depreciation_event_has_type [ a rdf:value ;
			rdf:value depr:asset_disposal ] ]
	[ a depr:depreciation_event ;
	depr:depreciation_event_asset [ a rdf:value ;
			rdf:value "car456"^^xsd:string ] ;
	depr:depreciation_event_date [ a rdf:value ;
			rdf:value "2020-07-31T00:00:00"^^xsd:dateTime ] ;
	depr:depreciation_event_has_type [ a rdf:value ;
			rdf:value depr:asset_disposal ] ]
).

depr_ui:depreciation_example_assets rdf:value (
	[ a depr:depreciation_asset ;
	depr:cost [ a rdf:value ;
			rdf:value 1000 ] ;
	depr:effective_life_years [ a rdf:value ;
			rdf:value 5 ] ;
	depr:id [ a rdf:value ;
			rdf:value "car123"^^xsd:string ] ;
	depr:start_date [ a rdf:value ;
			rdf:value "2017-05-01T00:00:00"^^xsd:dateTime ] ]
	[ a depr:depreciation_asset ;
	depr:cost [ a rdf:value ;
			rdf:value 2000 ] ;
	depr:effective_life_years [ a rdf:value ;
			rdf:value 8 ] ;
	depr:id [ a rdf:value ;
			rdf:value "car456"^^xsd:string ] ;
	depr:start_date [ a rdf:value ;
			rdf:value "2015-03-16T00:00:00"^^xsd:dateTime ] ]
).

depr:depreciation_query_has_type rdfs:range depr:depreciation_query_type.
depr:depreciation_pool_from_start				a depr:depreciation_query_type.
depr:depreciation_between_two_dates				a depr:depreciation_query_type.
depr:written_down_value							a depr:depreciation_query_type.
depr:profit_and_loss							a depr:depreciation_query_type.

depr:depreciation_event_has_type rdfs:range depr:depreciation_event_type.
depr:transfer_asset_to_pool	a depr:depreciation_event_type.
depr:asset_disposal	a depr:depreciation_event_type.

depr:depreciation_query_method rdfs:range depr:depreciation_query_method_type.
depr:diminishing_value a depr:depreciation_query_method_type.
depr:prime_cost a depr:depreciation_query_method_type.

depr_ui:depreciation_queries
	excel:title "depreciation_queries";
	excel:position [excel:col "A"; excel:row "3"];
	excel:cardinality excel:multi;
	excel:class depr:depreciation_query;
	excel:fields (
		[excel:property depr:depreciation_query_has_type; excel:type excel:uri]
		[excel:property depr:depreciation_query_asset_id]
		[excel:property depr:depreciation_query_pool]
		[excel:property depr:depreciation_query_from_date; excel:type xsd:dateTime]
		[excel:property depr:depreciation_query_to_date; excel:type xsd:dateTime]
		[excel:property depr:depreciation_query_written_down_date; excel:type xsd:dateTime]
		[excel:property depr:depreciation_query_method; excel:type excel:uri]
		[excel:property depr:depreciation_query_termination_value; excel:type xsd:decimal]
		[excel:property depr:depreciation_query_termination_date; excel:type xsd:dateTime]
		[excel:property depr:depreciation_query_total_depreciation; excel:type xsd:decimal]
		[excel:property depr:depreciation_query_depreciation_value; excel:type xsd:decimal]
		[excel:property depr:depreciation_query_written_down_value; excel:type xsd:decimal]
		[excel:property depr:depreciation_query_profit_and_loss; excel:type xsd:decimal]
	).

depr_ui:depreciation_events
	excel:title "depreciation_events";
	excel:position [excel:col "A"; excel:row "3"];
	excel:cardinality excel:multi;
	excel:class depr:depreciation_event;
	excel:fields (
		[excel:property depr:depreciation_event_has_type; excel:type excel:uri]
		[excel:property depr:depreciation_event_asset]
		[excel:property depr:depreciation_event_pool]
		[excel:property depr:depreciation_event_date; excel:type xsd:dateTime]
	).

depr_ui:depreciation_assets
	excel:title "depreciation_assets";
	excel:position [excel:col "A"; excel:row "3"];
	excel:cardinality excel:multi;
	excel:class depr:depreciation_asset;
	excel:fields (
		[excel:property depr:id]
		[excel:property depr:start_date; excel:type xsd:dateTime]
		[excel:property depr:cost; excel:type xsd:decimal]
		[excel:property depr:effective_life_years; excel:type xsd:integer]
	).






ic_ui:investment_calculator_sheets
	excel:sheets
	(
		ic_ui:report_details_sheet
		smsf_ui:members_sheet
		smsf_ui:distribution_sheet
		smsf_ui:income_tax_sheet
		ic_ui:reallocation_sheet
		ic_ui:gl_input_sheet
		ic_ui:additional_files_sheet
		ic_ui:unit_types_sheet
	).

ic_ui:investment_calculator_example
	excel:example_has_sheets (
		[	excel:has_sheet ic_ui:report_details_sheet;
			excel:example_doc ic_ui:report_details_example]
		[	excel:has_sheet ic_ui:gl_input_sheet;
			excel:example_doc ic_ui:gl_input_example]
		[	excel:has_sheet ic_ui:additional_files_sheet;
			excel:example_doc ic_ui:additional_files_example]
		[	excel:has_sheet ic_ui:unit_types_sheet;
			excel:example_doc ic_ui:unit_types_example]
).

ic_ui:unit_types_sheet
	excel:root ic:unit_types.

ic_ui:unit_types_example
	rdf:value ().

ic:unit_types
	excel:position [excel:col "A"; excel:row "3"];
	excel:title "unit types";
	excel:cardinality excel:multi;
	excel:class ic:unit_type;
	excel:fields (
		[excel:property ic:unit_type_name; excel:type xsd:string]
		[excel:property ic:unit_type_category; excel:type xsd:string]
		[excel:property ic:unit_type_subcategory; excel:type xsd:string]
	).

ic_ui:report_details_sheet
	excel:root ic_ui:report_details.

ic_ui:report_details_example
	ic:currency [rdf:value "AUD"];
	ic:from [rdf:value "2019-07-01T00:00:00.0"^^xsd:dateTime];
	ic:to [rdf:value "2020-01-01T00:00:00.0"^^xsd:dateTime];
	ic:cost_or_market [rdf:value ic:cost];
	ic_ui:account_taxonomies [rdf:value (
		[account_taxonomies:url [rdf:value account_taxonomies:base]]
		[account_taxonomies:url [rdf:value account_taxonomies:investments]]
		[account_taxonomies:url [rdf:value account_taxonomies:livestock]]
	)].

ic_ui:gl_input_sheet
	excel:multiple_sheets_allowed true;
	excel:optional true;
	excel:name_prefix "GL_input";
	excel:root ic_ui:gl.

ic_ui:reallocation_sheet
	excel:multiple_sheets_allowed true;
	excel:optional true;
	excel:name_prefix "reallocation";
	excel:root ic_ui:reallocation.

ic_ui:gl_input_example
	ic:default_currency [rdf:value "AUD"];
	ic:items [rdf:value ()].

ic_ui:additional_files_sheet
	excel:optional true;
	excel:root ic_ui:additional_files.

ic_ui:additional_files_example
	rdf:value ().

ic_ui:gl
	excel:position [excel:col "A"; excel:row "3"];
	excel:title "GL input";
	excel:cardinality excel:single;
	excel:class ic:gl;
	excel:fields (
		[excel:property ic:default_currency; excel:type xsd:string]
		[excel:property ic:items; excel:template ic_ui:gl_entries_template]
	).

ic_ui:gl_entries_template
	excel:position [excel:col "A"; excel:row "6"];
	excel:title "entries";
	excel:cardinality excel:multi;
	excel:class ic:gl_entry;
	excel:fields (
		[excel:property ic:date; excel:type xsd:dateTime]
		[excel:property ic:account; excel:type xsd:string]
		[excel:property ic:description; excel:type xsd:string]
		[excel:property ic:debit; excel:type xsd:string]
		[excel:property ic:credit; excel:type xsd:string]
		[excel:property ic:param1; excel:type xsd:string]
		[excel:property ic:param2; excel:type xsd:string]
		[excel:property ic:param3; excel:type xsd:string]
		[excel:property ic:param4; excel:type xsd:string]
	).

reallocation:account_A rdfs:label "account A".
reallocation:account_A_is rdfs:label "account A is".
reallocation:items rdfs:label "entries".

reallocation:account_A_is rdfs:range reallocation:Drcr.
reallocation:debited a reallocation:Drcr.
reallocation:credited a reallocation:Drcr.
reallocation:credited rdf:type2 reallocation:Drcr.
reallocation:debited reallocation:account_A_side kb:debit.
reallocation:credited reallocation:account_A_side kb:credit.

reallocation:account rdfs:label "Account B".
reallocation:account rdfs:label "Account_Type".
reallocation:date rdfs:label "Date".
reallocation:date rdfs:label "Transaction_Date".
reallocation:date rdfs:label "Bank_Transaction_Date".
reallocation:amount rdfs:label "Amount".
reallocation:description rdfs:label "Transaction_Description".


ic_ui:reallocation
	excel:position [excel:col "A"; excel:row "4"];
	excel:title "reallocation";
	excel:cardinality excel:single;
	excel:class ic:reallocation;
	excel:fields (
		[excel:property ic:default_currency; excel:type xsd:string]
		[excel:property reallocation:account_A; excel:type xsd:string]
		[excel:property reallocation:account_A_is; excel:type excel:uri]
		[excel:property reallocation:items; excel:template ic_ui:reallocation_entries_template]
	).

ic_ui:reallocation_entries_template
	excel:position [excel:col "A"; excel:row "9"];
	excel:title "transactions";
	excel:cardinality excel:multi;
	excel:class ic:reallocation_entry;
	excel:fields (
		[excel:property reallocation:account; excel:type xsd:string]
		[excel:property reallocation:date; excel:type xsd:dateTime]
		[excel:property reallocation:amount; excel:type xsd:string]
		[excel:property reallocation:description; excel:type xsd:string]
		[excel:property ic:param1; excel:type xsd:string]
		[excel:property ic:param2; excel:type xsd:string]
		[excel:property ic:param3; excel:type xsd:string]
		[excel:property ic:param4; excel:type xsd:string]
		[excel:property ic:param5; excel:type xsd:string]
	).

ic_ui:additional_files
	excel:cardinality excel:multi;
	excel:class ic:additional_file;
	excel:fields (
		[excel:property ic:url]
	).

ic_ui:report_details
	excel:cardinality excel:single;
	excel:class ic:report_details;
	excel:fields (
		[excel:property ic:from; excel:type xsd:dateTime]
		[excel:property ic:to; excel:type xsd:dateTime]
		[excel:property ic:currency; excel:type xsd:string]
		[excel:property ic:cost_or_market; excel:type excel:uri]
		[excel:property ic_ui:account_taxonomies; excel:template ic_ui:account_taxonomies]
	).


ic_ui:account_taxonomies
	excel:position [excel:col "D"; excel:row "5"];
	excel:title "account taxonomies";
	excel:cardinality excel:multi;
	excel:class ic_ui:account_taxonomy;
	excel:fields (
		[	excel:property account_taxonomies:url;
			excel:type excel:uri;
			excel:comment "use one of the pre-defined shorthands or specify a full URL of a XBRL taxonomy or XML file"]
		[	excel:property account_taxonomies:note;
			excel:type xsd:string]
	).

account_taxonomies:url rdfs:range account_taxonomies:Account_taxonomy.
account_taxonomies:base a account_taxonomies:Account_taxonomy.
account_taxonomies:investments a account_taxonomies:Account_taxonomy.
account_taxonomies:livestock a account_taxonomies:Account_taxonomy.
account_taxonomies:smsf a account_taxonomies:Account_taxonomy.



ic:cost_or_market rdfs:range ic:cost_or_market_type.
ic:cost a ic:cost_or_market_type.
ic:market a ic:cost_or_market_type.


ic_ui:transaction_input
	excel:cardinality excel:multi;
	excel:class ic:transaction;
	excel:fields (
		[excel:property ic:date]
		[excel:property ic:primary_account]
		[excel:property ic:action_verb]
		[excel:property ic:debit]
		[excel:property ic:credit]
		[excel:property ic:currency]
		[excel:property ic:description1]
		[excel:property ic:description2]
		[excel:property ic:description3]
	).






ic_ui:gl_input_example
	ic:default_currency [rdf:value "AUD"];
	ic:items [rdf:value (
						[
							ic:date [rdf:value "2019-10-10T00:00:00.000000"^^xsd:dateTime];
							ic:account [rdf:value "Assets"];
							ic:debit [rdf:value "USD 500"]
						]
						[
							ic:date [rdf:value "2019-10-10T00:00:00.000000"^^xsd:dateTime];
							ic:account [rdf:value "Revenue"];
							ic:credit [rdf:value "600"]
						]
						[
							ic:date [rdf:value "2019-10-10T00:00:00.000000"^^xsd:dateTime];
							ic:account [rdf:value "CurrencyMovement"];
							ic:debit [rdf:value "600 AUD"];
							ic:credit [rdf:value "500 USD"]
						]
	)].

hp_ui:hirepurchase_calculator_example
	a excel:example_sheet_set;
	excel:label "Hirepurchase Calculator Template";
	excel:example_has_sheets (
		[	excel:has_sheet hp_ui:hirepurchase_calculator_query_sheet;
			excel:example_doc hp_ui:hirepurchase_calculator_query_example]
).

hp_ui:hirepurchase_calculator_sheets
	a excel:sheet_set;
	excel:sheets (
		hp_ui:hirepurchase_calculator_query_sheet
	).

hp_ui:hirepurchase_calculator_query_sheet
	a excel:sheet_type;
	excel:multiple_sheets_allowed true;
	excel:name_prefix "HP";
	excel:root hp_ui:hp_calculator_query.

hp_ui:hirepurchase_calculator_query_example
	hp:begin_date [rdf:value "2019-10-10T00:00:00.0"^^xsd:dateTime];
	hp:hp_contract [
		a hp:hp_contract;
		hp:contract_number [rdf:value "xxxx"];
		hp:currency [ rdf:value "AUD"];
		hp:cash_price [ rdf:value "321321.27"];
		hp:interest_rate [ rdf:value "5"];
		hp:number_of_installments [ rdf:value 30];
		hp:hp_contract_has_payment_type [ rdf:value hp:hp_contract_payment_type_advance];
		hp:hp_installments [rdf:value rdf:nil]
	].

hp_ui:hp_calculator_query
	excel:position [excel:col "A"; excel:row "3"];
	excel:title "Standalone Calculator Query Parameters";
	excel:cardinality excel:single;
	excel:class hp:hp_calculator_query;
	excel:fields (
		[	excel:property hp:begin_date;
			excel:type xsd:dateTime;
			excel:comment "ignored for Investment Calculator"]
		[	excel:property hp:end_date;
			excel:type xsd:dateTime;
			excel:comment "ignored for Investment Calculator"]
		[
			excel:property hp:hp_contract;
			excel:template hp_ui:hp_contract]
	).


hp_ui:hp_contract
	excel:position [excel:col "A"; excel:row "7"];
	excel:title "Hirepurchase Contract";
	excel:cardinality excel:single;
	excel:class hp:hp_contract;
	excel:fields (
		[excel:property hp:contract_number]
		[excel:property hp:currency]
		[excel:property hp:cash_price;
			excel:type xsd:decimal]
		[excel:property hp:interest_rate;
			excel:type xsd:decimal]
		[excel:property hp:interest_period;
			excel:note "dunno what type here"]
		[excel:property hp:repayment_period;
			excel:note "dunno what type here"]
		[excel:property hp:number_of_installments;
			excel:type xsd:integer]
		[excel:property hp:repayment_amount;
			excel:type xsd:decimal]
		[excel:property hp:total_payments;
			excel:type xsd:integer]
		[excel:property hp:total_interest;
			excel:type xsd:decimal]
		[excel:property hp:repayment_balance;
			excel:type xsd:decimal]
		[excel:property hp:hp_contract_has_payment_type;
			excel:type excel:uri]
		[excel:property hp:hp_installments;
			excel:template hp_ui:hp_installments]
	).

hp:hp_contract_has_payment_type rdfs:range hp:hp_contract_payment_type.

hp:hp_contract_payment_type_advance
	a hp:hp_contract_payment_type;
	rdfs:label "advance".

hp_ui:hp_installments
	excel:position [excel:col "E"; excel:row "22"];
	excel:title "Installments";
	excel:cardinality excel:multi;
	excel:class hp:hp_installment;
	excel:fields (
		[excel:property hp:installment_number;
			excel:type xsd:integer]
		[excel:property hp:opening_date;
			excel:type xsd:dateTime;]
		[excel:property hp:opening_balance;
			excel:type xsd:decimal]
		[excel:property hp:interest_amount;
			excel:type xsd:decimal]
		[excel:property hp:installment_amount;
			excel:type xsd:decimal]
		[excel:property hp:closing_date;
			excel:type xsd:dateTime;]
		[excel:property hp:closing_balance;
			excel:type xsd:decimal]
		[excel:property hp:total_repayments_through_period;
			excel:type xsd:decimal]
		[excel:property hp:total_interest_payments_through_period;
			excel:type xsd:decimal]
	).

